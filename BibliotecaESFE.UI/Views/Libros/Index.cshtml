<link rel="stylesheet" href="~/css/calificaciones.css" />
<script src="~/js/libro.js"></script>
@using BibliotecaESFE.EN
@model IEnumerable<BibliotecaESFE.EN.Libros>
@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Autores> autores = ViewBag.Autores as List<Autores>;
    List<Editoriales> editoriales = ViewBag.Editoriales as List<Editoriales>;
    List<Categorias> categorias = ViewBag.Categorias as List<Categorias>;
    List<CalificacionesResenias> calificacionesResenias = ViewBag.CalificacionesResenias as List<CalificacionesResenias>;
    List<Usuarios> usuarios = ViewBag.Usuarios as List<Usuarios>;

}
<h1>Crea Libros</h1>
<div class="row">
    <div class="col-md-12">

            <form asp-action="Index" method="get">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Título</label>
                        <input type="text" class="form-control" id="searchTitle" name="searchTitle" placeholder="Buscar por título..." />

                        </div>
                    </div>
                    <div class="form-group m-2">
                        <input type="submit" value="Buscar" class="btn btn-outline-info" />
                        <a asp-action="Create" class="btn btn-outline-primary">Nuevo libro</a>
                    </div>
                </div>
            </form>

    </div>
</div>
<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Titulo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Autores)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Editoriales)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Categorias)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Disponibilidad)
            </th>
            <th>
                Calificación
            </th>
            <th>
                Comentario
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Titulo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Autores.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Editoriales.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Categorias.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Disponibilidad)
                </td>
                <td>
                    @{

                        var comentarioResenia = calificacionesResenias.FirstOrDefault(c => c.LibroId == item.Id);
                        var calificacionResenia = calificacionesResenias.FirstOrDefault(c => c.LibroId == item.Id);

                    }
                    @if (calificacionResenia != null)
                    {
                        <span class="rating">
                            @for (int i = 0; i < calificacionResenia.Calificacion; i++)
                            {
                                <span class="star">&#9733;</span>
                            }
                        </span>
                    }
                    else
                    {
                        <span>No calificado</span>
                    }
                </td>

                <td>
                    @if (comentarioResenia != null)
                    {
                        <span>@comentarioResenia.Comentario</span>
                    }
                    else
                    {
                        <span>Sin comentario</span>
                    }
                </td>


                <td>
                    @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info" })
                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary" })
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                    @Html.ActionLink("Calificar", "Calificar", new { id = item.Id }, new { @class = "btn btn-outline-primary" })
                </td>
            </tr>
            numRegistros++;
            if (numRegistros == numRegistrosPorPage)
            {
                numPage++;
                numRegistros = 0;
            }
        }
        @{
            if (numRegistros == 0)
            {
                numPage--;
            }
        }
    </tbody>
</table>
@if (numPage > 1)
{
    <div class="row" style="overflow:auto">
        <div class="col-md-12">
            <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Previous</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Next</a></li>
            </ul>
        </div>
    </div>
}
